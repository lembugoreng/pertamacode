{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\pertamacode\\\\pertamafrontend\\\\src\\\\components\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"../axios\";\nimport { Container, TextField, Button, Typography, Box, Paper, Snackbar, Alert, LoadingButton } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\"\n  });\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // Handle Snackbar Close\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true); // Start loading\n\n    try {\n      const endpoint = isLogin ? \"/login\" : \"/register\";\n      const payload = isLogin ? {\n        email,\n        password\n      } : {\n        name,\n        email,\n        password\n      };\n      const response = await axios.post(endpoint, payload);\n      localStorage.setItem(\"token\", response.data.token);\n      setSnackbar({\n        open: true,\n        message: isLogin ? \"Login successful!\" : \"Registration successful!\",\n        severity: \"success\"\n      });\n      navigate(\"/home\");\n    } catch (error) {\n      setSnackbar({\n        open: true,\n        message: \"Login/Register failed: \" + error.message,\n        severity: \"error\"\n      });\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    sx: {\n      height: \"100vh\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      sx: {\n        padding: 4,\n        backgroundColor: \"background.paper\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          color: \"primary\",\n          children: isLogin ? \"Login\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [!isLogin && /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Name\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          InputLabelProps: {\n            style: {\n              color: \"#b0bec5\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          type: \"email\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          InputLabelProps: {\n            style: {\n              color: \"#b0bec5\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          type: \"password\",\n          fullWidth: true,\n          margin: \"normal\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          InputLabelProps: {\n            style: {\n              color: \"#b0bec5\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          loading: loading // Show spinner when loading is true\n          ,\n          sx: {\n            mt: 2\n          },\n          children: isLogin ? \"Login\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsLogin(!isLogin),\n        sx: {\n          mt: 2,\n          color: \"secondary.main\"\n        },\n        children: isLogin ? \"Don't have an account? Register\" : \"Already have an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 3000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        sx: {\n          width: \"100%\"\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"JMJM2jp31y0jUg1c4QKy1isB3DM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","axios","Container","TextField","Button","Typography","Box","Paper","Snackbar","Alert","LoadingButton","useNavigate","jsxDEV","_jsxDEV","AuthForm","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","name","setName","snackbar","setSnackbar","open","message","severity","loading","setLoading","navigate","handleCloseSnackbar","handleSubmit","e","preventDefault","endpoint","payload","response","post","localStorage","setItem","data","token","error","maxWidth","sx","height","display","alignItems","justifyContent","children","elevation","padding","backgroundColor","textAlign","variant","gutterBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","fullWidth","margin","value","onChange","target","InputLabelProps","style","type","mt","onClick","autoHideDuration","onClose","width","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/pertamacode/pertamafrontend/src/components/AuthForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Snackbar,\r\n  Alert,\r\n  LoadingButton\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst AuthForm = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: \"\",\r\n    severity: \"success\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Handle Snackbar Close\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar({ ...snackbar, open: false });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); // Start loading\r\n\r\n    try {\r\n      const endpoint = isLogin ? \"/login\" : \"/register\";\r\n      const payload = isLogin ? { email, password } : { name, email, password };\r\n      const response = await axios.post(endpoint, payload);\r\n\r\n      localStorage.setItem(\"token\", response.data.token);\r\n\r\n      setSnackbar({\r\n        open: true,\r\n        message: isLogin ? \"Login successful!\" : \"Registration successful!\",\r\n        severity: \"success\",\r\n      });\r\n      navigate(\"/home\");\r\n    } catch (error) {\r\n      setSnackbar({\r\n        open: true,\r\n        message: \"Login/Register failed: \" + error.message,\r\n        severity: \"error\",\r\n      });\r\n    } finally {\r\n      setLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"xs\"\r\n      sx={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={4}\r\n        sx={{ padding: 4, backgroundColor: \"background.paper\" }}\r\n      >\r\n        <Box textAlign=\"center\">\r\n          <Typography variant=\"h4\" gutterBottom color=\"primary\">\r\n            {isLogin ? \"Login\" : \"Register\"}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          {!isLogin && (\r\n            <TextField\r\n              label=\"Name\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              InputLabelProps={{ style: { color: \"#b0bec5\" } }}\r\n            />\r\n          )}\r\n          <TextField\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            InputLabelProps={{ style: { color: \"#b0bec5\" } }}\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            InputLabelProps={{ style: { color: \"#b0bec5\" } }}\r\n          />\r\n          <LoadingButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            loading={loading} // Show spinner when loading is true\r\n            sx={{ mt: 2 }}\r\n          >\r\n            {isLogin ? \"Login\" : \"Register\"}\r\n          </LoadingButton>\r\n        </form>\r\n        <Button\r\n          onClick={() => setIsLogin(!isLogin)}\r\n          sx={{ mt: 2, color: \"secondary.main\" }}\r\n        >\r\n          {isLogin\r\n            ? \"Don't have an account? Register\"\r\n            : \"Already have an account? Login\"}\r\n        </Button>\r\n      </Paper>\r\n\r\n      {/* Snackbar Component */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={3000}\r\n        onClose={handleCloseSnackbar}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseSnackbar}\r\n          severity={snackbar.severity}\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}