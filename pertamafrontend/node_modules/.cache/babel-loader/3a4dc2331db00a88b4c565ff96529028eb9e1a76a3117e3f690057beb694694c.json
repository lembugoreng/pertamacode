{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\pertamacode\\\\pertamafrontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../axios\";\nimport { Container, Typography, Button, CircularProgress, Box, Grid } from \"@mui/material\";\nimport BlogPostCard from \"./BlogPostCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [userRole, setUserRole] = useState(\"\");\n  const [userName, setUserName] = useState(\"Loading...\");\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // ✅ Fetch both user details and blog posts on page load\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      window.location.href = \"/login\";\n    } else {\n      fetchUserAndPosts();\n    }\n  }, [currentPage]);\n\n  // ✅ Fetch user details and blog posts simultaneously\n  const fetchUserAndPosts = async () => {\n    setLoading(true);\n    try {\n      // Fetch user details\n      const userResponse = await axios.get(\"/user\");\n      setUserName(userResponse.data.name);\n      setUserRole(localStorage.getItem(\"role\"));\n\n      // Fetch blog posts\n      const postsResponse = await axios.get(`/blog-posts?page=${currentPage}`);\n      setPosts(postsResponse.data.data);\n      setTotalPages(postsResponse.data.meta.last_page);\n    } catch (error) {\n      console.error(\"Error fetching user details or blog posts:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ✅ Handle Post Deletion\n  const handlePostDeleted = postId => {\n    setPosts(prevPosts => prevPosts.filter(post => post.id !== postId));\n  };\n\n  // ✅ Handle Post Update\n  const handlePostUpdated = (postId, updatedPost) => {\n    setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n      ...post,\n      ...updatedPost\n    } : post));\n  };\n\n  // ✅ Show loading spinner while data is being fetched\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        backgroundColor: \"background.default\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ✅ Render the Home page after data is fully loaded\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: [\"Logged in as: \", userName, \" (\", userRole, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), (userRole === \"admin\" || userRole === \"editor\") && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => navigate(\"/create\"),\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(BlogPostCard, {\n          post: post,\n          userRole: userRole,\n          onPostDeleted: handlePostDeleted,\n          onPostUpdated: handlePostUpdated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"20px\"\n      },\n      children: Array.from({\n        length: totalPages\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(Button, {\n        variant: index + 1 === currentPage ? \"contained\" : \"outlined\",\n        onClick: () => setCurrentPage(index + 1),\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"mFPHUaXgjrQukw8qIbIN8wLmTKw=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Typography","Button","CircularProgress","Box","Grid","BlogPostCard","useNavigate","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","currentPage","setCurrentPage","totalPages","setTotalPages","userRole","setUserRole","userName","setUserName","loading","setLoading","navigate","token","localStorage","getItem","window","location","href","fetchUserAndPosts","userResponse","get","data","name","postsResponse","meta","last_page","error","console","handlePostDeleted","postId","prevPosts","filter","post","id","handlePostUpdated","updatedPost","map","sx","display","justifyContent","alignItems","height","backgroundColor","children","color","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","onClick","style","marginBottom","container","spacing","item","xs","md","onPostDeleted","onPostUpdated","textAlign","marginTop","Array","from","length","_","index","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/pertamacode/pertamafrontend/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport { Container, Typography, Button, CircularProgress, Box, Grid } from \"@mui/material\";\r\nimport BlogPostCard from \"./BlogPostCard\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [userRole, setUserRole] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"Loading...\");\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ Fetch both user details and blog posts on page load\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      window.location.href = \"/login\";\r\n    } else {\r\n      fetchUserAndPosts();\r\n    }\r\n  }, [currentPage]);\r\n\r\n  // ✅ Fetch user details and blog posts simultaneously\r\n  const fetchUserAndPosts = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Fetch user details\r\n      const userResponse = await axios.get(\"/user\");\r\n      setUserName(userResponse.data.name);\r\n      setUserRole(localStorage.getItem(\"role\"));\r\n\r\n      // Fetch blog posts\r\n      const postsResponse = await axios.get(`/blog-posts?page=${currentPage}`);\r\n      setPosts(postsResponse.data.data);\r\n      setTotalPages(postsResponse.data.meta.last_page);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching user details or blog posts:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ✅ Handle Post Deletion\r\n  const handlePostDeleted = (postId) => {\r\n    setPosts((prevPosts) => prevPosts.filter((post) => post.id !== postId));\r\n  };\r\n\r\n  // ✅ Handle Post Update\r\n  const handlePostUpdated = (postId, updatedPost) => {\r\n    setPosts((prevPosts) =>\r\n      prevPosts.map((post) => (post.id === postId ? { ...post, ...updatedPost } : post))\r\n    );\r\n  };\r\n\r\n  // ✅ Show loading spinner while data is being fetched\r\n  if (loading) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100vh\",\r\n          backgroundColor: \"background.default\",\r\n        }}\r\n      >\r\n        <CircularProgress color=\"primary\" />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // ✅ Render the Home page after data is fully loaded\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Blog Posts\r\n      </Typography>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Logged in as: {userName} ({userRole})\r\n      </Typography>\r\n\r\n      {(userRole === \"admin\" || userRole === \"editor\") && (\r\n        <Button\r\n          onClick={() => navigate(\"/create\")}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ marginBottom: \"20px\" }}\r\n        >\r\n          Create New Post\r\n        </Button>\r\n      )}\r\n\r\n      <Grid container spacing={3}>\r\n        {posts.map((post) => (\r\n          <Grid item xs={12} md={6} key={post.id}>\r\n            <BlogPostCard\r\n              post={post}\r\n              userRole={userRole}\r\n              onPostDeleted={handlePostDeleted}\r\n              onPostUpdated={handlePostUpdated}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n        {Array.from({ length: totalPages }).map((_, index) => (\r\n          <Button\r\n            key={index}\r\n            variant={index + 1 === currentPage ? \"contained\" : \"outlined\"}\r\n            onClick={() => setCurrentPage(index + 1)}\r\n          >\r\n            {index + 1}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}