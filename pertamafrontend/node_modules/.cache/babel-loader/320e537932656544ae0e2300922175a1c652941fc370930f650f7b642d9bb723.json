{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\pertamacode\\\\pertamafrontend\\\\src\\\\components\\\\CommentDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, TextField, Button, List, ListItem, ListItemText, DialogActions, Box, CircularProgress, Typography } from \"@mui/material\";\nimport axios from \"../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentDialog = ({\n  postId,\n  open,\n  onClose\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (open) {\n      fetchComments();\n    }\n  }, [open]);\n\n  // get comments\n  const fetchComments = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`/blog-posts/${postId}/comments`);\n      setComments(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //add new comment\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(`/blog-posts/${postId}/comments`, {\n        comment_text: newComment\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNewComment(\"\");\n      fetchComments(); //  refetch comments to get the correct user data\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [loading ?\n      /*#__PURE__*/\n      // ✅ Show a loading spinner while comments are being fetched\n      _jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : comments.length > 0 ?\n      /*#__PURE__*/\n      // ✅ Show comments if available\n      _jsxDEV(List, {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: comment.user ? comment.user.name : \"Unknown User\",\n            secondary: comment.comment_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // ✅ Show this message if there are no comments\n      _jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"No comments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Add a comment\",\n          fullWidth: true,\n          multiline: true,\n          rows: 2,\n          value: newComment,\n          onChange: e => setNewComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        color: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddComment,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentDialog, \"28aH/h3QZbaOXlDiEQevIhHjSLo=\");\n_c = CommentDialog;\nexport default CommentDialog;\nvar _c;\n$RefreshReg$(_c, \"CommentDialog\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","TextField","Button","List","ListItem","ListItemText","DialogActions","Box","CircularProgress","Typography","axios","jsxDEV","_jsxDEV","CommentDialog","postId","open","onClose","_s","comments","setComments","newComment","setNewComment","loading","setLoading","fetchComments","response","get","data","error","console","handleAddComment","trim","token","localStorage","getItem","post","comment_text","headers","Authorization","fullWidth","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","justifyContent","mt","color","length","map","comment","primary","user","name","secondary","id","variant","label","multiline","rows","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/pertamacode/pertamafrontend/src/components/CommentDialog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  DialogActions,\r\n  Box,\r\n  CircularProgress, \r\n  Typography,\r\n} from \"@mui/material\";\r\nimport axios from \"../axios\";\r\n\r\nconst CommentDialog = ({ postId, open, onClose }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n  const [loading, setLoading] = useState(true); \r\n\r\n \r\n  useEffect(() => {\r\n    if (open) {\r\n      fetchComments();\r\n    }\r\n  }, [open]);\r\n\r\n\r\n  // get comments\r\n  const fetchComments = async () => {\r\n    setLoading(true); \r\n    try {\r\n      const response = await axios.get(`/blog-posts/${postId}/comments`);\r\n      setComments(response.data.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching comments:\", error);\r\n    } finally {\r\n      setLoading(false); \r\n    }\r\n  };\r\n\r\n  //add new comment\r\n  const handleAddComment = async () => {\r\n    if (!newComment.trim()) return;\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.post(\r\n        `/blog-posts/${postId}/comments`,\r\n        { comment_text: newComment },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      setNewComment(\"\");\r\n      fetchComments(); //  refetch comments to get the correct user data\r\n    } catch (error) {\r\n      console.error(\"Error adding comment:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\r\n      <DialogTitle>Comments</DialogTitle>\r\n      <DialogContent>\r\n        {loading ? ( // ✅ Show a loading spinner while comments are being fetched\r\n          <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 2 }}>\r\n            <CircularProgress color=\"primary\" />\r\n          </Box>\r\n        ) : comments.length > 0 ? ( // ✅ Show comments if available\r\n          <List>\r\n            {comments.map((comment) => (\r\n              <ListItem key={comment.id}>\r\n                <ListItemText\r\n                  primary={comment.user ? comment.user.name : \"Unknown User\"}\r\n                  secondary={comment.comment_text}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          // ✅ Show this message if there are no comments\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            No comments yet.\r\n          </Typography>\r\n        )}\r\n        <Box mt={2}>\r\n          <TextField\r\n            label=\"Add a comment\"\r\n            fullWidth\r\n            multiline\r\n            rows={2}\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n          />\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"secondary\">\r\n          Close\r\n        </Button>\r\n        <Button onClick={handleAddComment} variant=\"contained\" color=\"primary\">\r\n          Post Comment\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CommentDialog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}